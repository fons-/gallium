#version 120
uniform float worldTime;
uniform sampler2D tex;
uniform sampler2D depthTex;
uniform vec2 dim;
uniform int enableAO;

float toReal(float d){
	//return d * 10000.0;
	const float n = 0.01; // camera z near
	const float f = 100000.0; // camera z far
	return f * (2.0 * n) / (f + n - d * (f - n));
}

void main()
{
	gl_FragColor = texture2D(tex, gl_TexCoord[0].xy) * gl_Color;
	if(enableAO > 0)
	{
		const int N = 16;
		const vec2 poissonDisk[16] = vec2[](
			vec2(0.38151210224130394, 0.34230414121067976),
			vec2(-0.4388857113118583, -0.3020928146397821),
			vec2(0.11586035599779954, -0.8751443911062224),
			vec2(0.2516689794743654, 0.17347815707685132),
			vec2(0.5437031836764357, -0.5759205266655372),
			vec2(0.5634711265197421, 0.17328034245059176),
			vec2(-0.9370218121617213, 0.16681884158381521),
			vec2(0.6987758643023922, -0.4636640366578253),
			vec2(-0.5593300267763632, 0.8227090169169935),
			vec2(-0.2571460918197317, 0.24132432742299592),
			vec2(-0.0158172365201783, -0.10880328890950208),
			vec2(0.6432824045739105, 0.6893913105210423),
			vec2(-0.22803270691971855, 0.10072384518394317),
			vec2(0.718640404858548, -0.06041594984080212),
			vec2(0.1679468174281975, -0.060518638516195766),
			vec2(-0.8980069756652085, -0.06511717751401558)
		);
		/*const int N = 32;
		const vec2 poissonDisk[32] = vec2[](
			vec2(0.3779943157465824, 0.4054097647671009),
			vec2(-0.08204426218560368, 0.8226294716332916),
			vec2(0.4362199501515551, 0.5915161748129638),
			vec2(-0.40950226193178296, -0.215829964109296),
			vec2(0.2621872311909681, -0.21026673038403954),
			vec2(-0.2136124210071031, -0.8841750887563737),
			vec2(0.101679598668174, -0.47083528191552615),
			vec2(0.10590592658733722, 0.8510044910518322),
			vec2(0.9517549459823142, -0.169407315738074),
			vec2(-0.29745150726938907, -0.2888257922329869),
			vec2(-0.43783331640067824, 0.06101799241449646),
			vec2(0.2767921976257499, -0.143837000544766),
			vec2(-0.1690472428586811, 0.6508979253246552),
			vec2(-0.5522978900925906, 0.04098926580283635),
			vec2(-0.6674058870408475, 0.3301644652177531),
			vec2(0.9289679407004416, 0.3589658831286371),
			vec2(-0.5847153667197762, 0.13049974496972205),
			vec2(0.6729059456250299, 0.29385110086113686),
			vec2(-0.42856461044353655, -0.47748514381788487),
			vec2(0.08017703401384546, 0.9604707100142791),
			vec2(0.06241666063571838, -0.2376410133332767),
			vec2(-0.619513385195481, 0.7182325258607207),
			vec2(-0.4976903915999942, 0.3461182512507701),
			vec2(0.3795598228825612, -0.11951655611556422),
			vec2(-0.04479865768179625, -0.93769069450007),
			vec2(-0.17811386320231248, -0.843359823154159),
			vec2(-0.7872919952829927, 0.1442119698948665),
			vec2(0.6944875138717261, -0.1997338682136649),
			vec2(0.3317856640900878, 0.39001298532760975),
			vec2(-0.21696719664772512, 0.9403198733378377),
			vec2(-0.8025360597957927, -0.06115592872675313),
			vec2(-0.8249386006783337, 0.33434254762670657)
		);*/
		/*
		N=4
		const vec2 poissonDisk[4] = vec2[](
			vec2( -1,-1 ),
			vec2( -1,1 ),
			vec2( 1,-1 ),
			vec2( 1,1 )
		);*/
	

		float depth = toReal(texture2D(depthTex, gl_TexCoord[0].xy).x);

		//float sampleSin = sin(gl_TexCoord[0].x * 10);
		//float sampleCos = cos(gl_TexCoord[0].x * 10);
		//mat2 sampleRotation = mat2(sampleCos, sampleSin, sampleSin, sampleCos);

		float average = 0.0;
		int count = 0;
		for(int i = 0; i < N; i++){
			float d = toReal(texture2D(depthTex, gl_TexCoord[0].xy + poissonDisk[i] * /*sampleRotation */ 200.0 / dim / depth).x);
			if((depth - d) < 1.4){
				average += d;
				count++;
			}
		}
		average /= count;

		gl_FragColor.xyz *= sqrt(1.0 - 4.0 * max(0.0, (depth - average)-.1));
	}
}